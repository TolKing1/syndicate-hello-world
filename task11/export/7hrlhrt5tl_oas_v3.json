{
  "openapi": "3.0.1",
  "info": {
    "title": "task11_api",
    "version": "2024-10-29T06:09:08Z"
  },
  "servers": [
    {
      "url": "https://7hrlhrt5tl.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/signup": {
      "post": {
        "summary": "Create a new user",
        "description": "This endpoint allows you to create a new user by providing details such as first name, last name, email, and password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": {
                    "type": "string",
                    "pattern": "^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[$%^*-_]).{12,}$"
                  }
                },
                "required": ["firstName", "lastName", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign-up process is successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request."
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": { "statusCode": "200" }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "Authenticate a user",
        "description": "This endpoint allows a user to sign in by providing their email and password. If the credentials are valid, an access token is returned.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": {
                    "type": "string",
                    "pattern": "^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[$%^*]).{12,}$"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request has succeeded. The server has processed the sign-in request, and the provided credentials (email and password) were valid. The response contains an access token, which will be used for subsequent authenticated requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request."
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": { "statusCode": "200" }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "Retrieve full list of tables",
        "description": "This endpoint returns a list of all tables along with details such as ID, number, capacity, if it is a VIP table, and the minimum order required (if any).",
        "security": [
          {
            "authorizer": []
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded. The server has processed the request and has returned a list of tables as specified in the response body. Each table includes details such as its ID, number, capacity, whether it's in the VIP hall, and optionally, the minimum order required to book it.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "number": { "type": "integer" },
                          "places": { "type": "integer" },
                          "isVip": { "type": "boolean" },
                          "minOrder": { "type": "integer" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request."
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "post": {
        "summary": "Create a new table",
        "description": "This endpoint allows for the creation of a new table by specifying its ID, number, places, and whether it is a VIP table.",
        "security": [
          {
            "authorizer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "number": { "type": "integer" },
                  "places": { "type": "integer" },
                  "isVip": { "type": "boolean" },
                  "minOrder": { "type": "integer" }
                },
                "required": ["id", "number", "places", "isVip"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request has succeeded. The server has successfully created a new table based on the information provided in the request body. The response contains the ID of the newly created table.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request."
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/tables/{tableId}": {
      "get": {
        "summary": "Retrieve table details",
        "description": "This endpoint returns details about a specific table identified by {tableId}, including its ID, number, capacity, if it is a VIP table, and optionally, the minimum order required to book it.",
        "security": [
          {
            "authorizer": []
          }
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded. The server has processed the request and has returned information about the table specified by {tableId}. The response body contains details such as the table's ID, number, capacity, whether it's in the VIP hall, and optionally, the minimum order required to book it.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "number": { "type": "integer" },
                    "places": { "type": "integer" },
                    "isVip": { "type": "boolean" },
                    "minOrder": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request."
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/reservations": {
      "post": {
        "summary": "Create a reservation",
        "description": "This endpoint allows for the creation of a new reservation by specifying the table number, client name, phone number, date, and time slot.",
        "security": [
          {
            "authorizer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tableNumber": { "type": "integer" },
                  "clientName": { "type": "string" },
                  "phoneNumber": { "type": "string" },
                  "date": { "type": "string", "format": "date" },
                  "slotTimeStart": { "type": "string", "pattern": "^[0-2][0-9]:[0-5][0-9]$" },
                  "slotTimeEnd": { "type": "string", "pattern": "^[0-2][0-9]:[0-5][0-9]$" }
                },
                "required": ["tableNumber", "clientName", "phoneNumber", "date", "slotTimeStart", "slotTimeEnd"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The reservation was successfully created. The server has processed the request, and a new reservation has been successfully added to the system.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": { "type": "string", "format": "uuid" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request. Possible reasons include invalid input, table not found, or conflicting reservations."
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "get": {
        "summary": "Retrieve list of reservations",
        "description": "This endpoint returns a list of all reservations, including details such as the table number, client name, phone number, date, and time slot.",
        "security": [
          {
            "authorizer": []
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded. The server has provided a list of reservations as specified in the response body.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tableNumber": { "type": "integer" },
                          "clientName": { "type": "string" },
                          "phoneNumber": { "type": "string" },
                          "date": { "type": "string", "format": "date" },
                          "slotTimeStart": { "type": "string", "pattern": "^[0-2][0-9]:[0-5][0-9]$" },
                          "slotTimeEnd": { "type": "string", "pattern": "^[0-2][0-9]:[0-5][0-9]$" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was an error in the request."
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "x-syndicate-cognito-userpool-names": ["${booking_userpool}"],
          "type": "cognito_user_pools"
        }
      }
    }
  }
}